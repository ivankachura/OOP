#include "stdafx.h"
#include <iostream>
#include <string>
#include <vector>

using namespace std;
class Student 
{
protected:
	string name;
	string surname;
	int year;
public:
	Student(string &name, string &surname, int year) 
	{
		this->name = name;
		this->surname = surname;
		this->year = year;
	}
	Student() 
	{
	    cout << "- - - - - - - - - " << endl;
		cout << "Введите имя: ";
		cin >> name;
		cout << "- - - - - - - - - " << endl;
		out << "Введите Фамилию: ";
		cin >> surname;
		cout << "- - - - - - - - - " << endl;
		out << "Введите год рождения: ";
		cin >> year;
	}
	string get_Data() 
	{
		return name + surname + to_string(year);
	}
	friend ostream& operator<< (std::ostream &out, const Student &student)
	{
		out << student.name<<student.surname<<student.year;
		return out;
	}
};

class Headman:public Student 
{
	string email;
	int phone;
public: 
	Headman(string& email, int phone):Student(name,surname,year)
	{
		this->email = email;
		this->phone = phone;
	}
	Headman() :Student() 
	{
		cout << "- - - - - - - - - " << endl;
		cout << "Введите почту:";
		cin >> email;
		cout << "- - - - - - - - - " << endl;
		out << "Введите телефон: ";
		cin>> phone;
	}
	string get_HData() 
	{
		return get_Data() + email + to_string(phone);
	}
};
int main()
{
	Student a;
	vector<Student> p;
	p.push_back(a);
	p.push_back(a);
	p.push_back(a);
	p.push_back(a);
	cout << "- - - - - - - - - " << endl;
	cout << "Студентy: " << endl;
	for (int i = 0; i < p.size(); i++)cout << p[i] << endl;
	cout << "- - - - - - - - - " << endl;
	cout << "Старосте: " << endl;
	Headman b;
	cout << b.get_HData() << endl;
	system("pause");
	return 0;
}
